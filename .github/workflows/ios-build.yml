name: iOS Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  XCODE_VERSION: '15.2'
  IOS_SIMULATOR: 'iPhone 15 Pro'
  IOS_VERSION: '17.2'

jobs:
  test:
    name: Run Tests
    runs-on: macos-14
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_${{ env.XCODE_VERSION }}.app/Contents/Developer
      
    - name: Show Xcode version
      run: xcodebuild -version
      
    - name: Show available simulators
      run: xcrun simctl list devices available
      
    - name: Cache Swift Package Manager
      uses: actions/cache@v4
      with:
        path: |
          ~/Library/Caches/org.swift.swiftpm/
          ~/.cache/org.swift.swiftpm/
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
          
    - name: Install dependencies
      run: |
        if [ -f "DeenBuddy.xcodeproj/project.pbxproj" ]; then
          echo "Xcode project found, resolving Swift packages..."
          xcodebuild -resolvePackageDependencies -project DeenBuddy.xcodeproj
        elif [ -f "DeenBuddy.xcworkspace" ]; then
          echo "Xcode workspace found, resolving Swift packages..."
          xcodebuild -resolvePackageDependencies -workspace DeenBuddy.xcworkspace
        else
          echo "No Xcode project found yet, skipping dependency resolution"
        fi
      
    - name: Run unit tests
      run: |
        if [ -f "DeenBuddy.xcodeproj/project.pbxproj" ]; then
          xcodebuild test \
            -project DeenBuddy.xcodeproj \
            -scheme DeenBuddy \
            -destination "platform=iOS Simulator,name=${{ env.IOS_SIMULATOR }},OS=${{ env.IOS_VERSION }}" \
            -enableCodeCoverage YES \
            -derivedDataPath DerivedData
        else
          echo "No Xcode project found, skipping tests"
        fi
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          DerivedData/Logs/Test/
          DerivedData/Build/Products/Debug-iphonesimulator/
        retention-days: 7

  lint:
    name: SwiftLint
    runs-on: macos-14
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install SwiftLint
      run: |
        brew install swiftlint
        
    - name: Run SwiftLint
      run: |
        if [ -d "DeenBuddy" ]; then
          swiftlint --strict
        else
          echo "No Swift source directory found, skipping SwiftLint"
        fi

  build:
    name: Build iOS App
    runs-on: macos-14
    needs: [test, lint]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_${{ env.XCODE_VERSION }}.app/Contents/Developer
      
    - name: Cache Swift Package Manager
      uses: actions/cache@v4
      with:
        path: |
          ~/Library/Caches/org.swift.swiftpm/
          ~/.cache/org.swift.swiftpm/
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
          
    - name: Build for simulator
      run: |
        if [ -f "DeenBuddy.xcodeproj/project.pbxproj" ]; then
          xcodebuild build \
            -project DeenBuddy.xcodeproj \
            -scheme DeenBuddy \
            -destination "platform=iOS Simulator,name=${{ env.IOS_SIMULATOR }},OS=${{ env.IOS_VERSION }}" \
            -derivedDataPath DerivedData
        else
          echo "No Xcode project found, skipping build"
        fi
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          DerivedData/Build/Products/Debug-iphonesimulator/
        retention-days: 7

  content-pipeline:
    name: Content Pipeline
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: content-pipeline/package-lock.json
        
    - name: Install content pipeline dependencies
      run: |
        cd content-pipeline
        npm ci
        
    - name: Validate content
      run: |
        cd content-pipeline
        npm run validate
        
    - name: Test content ingestion (dry run)
      run: |
        cd content-pipeline
        npm run ingest -- --dry-run --verbose
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
