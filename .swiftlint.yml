# SwiftLint Configuration for DeenAssist

# Paths to include during linting
included:
  - Sources
  - Tests
  - DeenAssist

# Paths to ignore during linting
excluded:
  - Carthage
  - Pods
  - .build
  - DerivedData

# Rules to disable
disabled_rules:
  - trailing_whitespace # Handled by editor
  - todo # Allow TODO comments during development

# Rules to enable that are disabled by default
opt_in_rules:
  - array_init
  - attributes
  - closure_end_indentation
  - closure_spacing
  - collection_alignment
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - contains_over_range_nil_comparison
  - discouraged_object_literal
  - empty_collection_literal
  - empty_count
  - empty_string
  - enum_case_associated_values_count
  - explicit_init
  - extension_access_modifier
  - fallthrough
  - fatal_error_message
  - file_header
  - first_where
  - flatmap_over_map_reduce
  - identical_operands
  - joined_default_parameter
  - last_where
  - legacy_random
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - modifier_order
  - nimble_operator
  - nslocalizedstring_key
  - number_separator
  - object_literal
  - operator_usage_whitespace
  - overridden_super_call
  - override_in_extension
  - pattern_matching_keywords
  - prefer_self_type_over_type_of_self
  - private_action
  - private_outlet
  - prohibited_super_call
  - quick_discouraged_call
  - quick_discouraged_focused_test
  - quick_discouraged_pending_test
  - reduce_into
  - redundant_nil_coalescing
  - redundant_type_annotation
  - single_test_class
  - sorted_first_last
  - static_operator
  - strong_iboutlet
  - toggle_bool
  - unavailable_function
  - unneeded_parentheses_in_closure_argument
  - untyped_error_in_catch
  - vertical_parameter_alignment_on_call
  - vertical_whitespace_closing_braces
  - vertical_whitespace_opening_braces
  - xct_specific_matcher
  - yoda_condition

# Rule configurations
line_length:
  warning: 120
  error: 150
  ignores_function_declarations: true
  ignores_comments: true
  ignores_urls: true

function_body_length:
  warning: 50
  error: 100

function_parameter_count:
  warning: 6
  error: 8

type_body_length:
  warning: 300
  error: 500

file_length:
  warning: 500
  error: 1000

cyclomatic_complexity:
  warning: 10
  error: 20

nesting:
  type_level:
    warning: 3
    error: 5
  statement_level:
    warning: 5
    error: 10

identifier_name:
  min_length:
    warning: 2
    error: 1
  max_length:
    warning: 50
    error: 60
  excluded:
    - id
    - x
    - y
    - z

type_name:
  min_length:
    warning: 3
    error: 2
  max_length:
    warning: 50
    error: 60

large_tuple:
  warning: 3
  error: 4

# Custom rules
custom_rules:
  # Require MARK comments for major sections
  mark_comment:
    name: "MARK Comment"
    regex: '(class|struct|enum|extension|protocol)\s+\w+.*\{[^}]*\n\s*\/\/\s*MARK:'
    message: "Major types should have MARK comments for organization"
    severity: warning

  # Discourage force unwrapping in production code
  force_unwrap_production:
    name: "Force Unwrap in Production"
    regex: '!\s*(?!\/\/|\/\*)'
    match_kinds:
      - identifier
    message: "Avoid force unwrapping in production code"
    severity: warning
    excluded: ".*Tests.*"

  # Require documentation for public APIs
  public_documentation:
    name: "Public API Documentation"
    regex: 'public\s+(class|struct|enum|protocol|func|var|let)'
    message: "Public APIs should be documented"
    severity: warning

# File header template
file_header:
  required_pattern: |
                    \/\/
                    \/\/  .*\.swift
                    \/\/  DeenAssist
                    \/\/
                    \/\/  Created by .* on \d{1,2}\/\d{1,2}\/\d{2,4}\.
                    \/\/

# Reporter type
reporter: "xcode"
